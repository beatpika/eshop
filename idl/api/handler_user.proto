syntax = "proto3";

package frontend.auth;

import "api/api.proto";
import "api/common.proto";

option go_package = "basic/user";

message UserRegisterReq {
    string email = 1 [(api.form) = "email"];
    string username = 2 [(api.form) = "username"];
    string password = 3 [(api.form) = "password"];
    string password_confirm = 4 [(api.form) = "password_confirm"];
    string phone = 5 [(api.form) = "phone"];
}

message UserRegisterResp {
    common.BaseResp base = 1;
    int32 user_id = 2;
    string token = 3;
}

message UserLoginReq {
    string email = 1 [(api.form) = "email"];
    string password = 2 [(api.form) = "password"];
}

message UserLoginResp {
    common.BaseResp base = 1;
    int32 user_id = 2;
    string token = 3;
    string username = 4;
    string avatar = 5;
}

message UserLogoutReq {
    int32 user_id = 1;
}

message UserLogoutResp {
    common.BaseResp base = 1;
}

message GetUserInfoReq {
    int32 user_id = 1;
}

message GetUserInfoResp {
    common.BaseResp base = 1;
    UserInfo user = 2;
}

message UpdateUserInfoReq {
    int32 user_id = 1;
    string username = 2 [(api.form) = "username"];
    string avatar = 3 [(api.form) = "avatar"];
    string address = 4 [(api.form) = "address"];
}

message UpdateUserInfoResp {
    common.BaseResp base = 1;
}

message UpdatePasswordReq {
    int32 user_id = 1;
    string old_password = 2 [(api.form) = "old_password"];
    string new_password = 3 [(api.form) = "new_password"];
}

message UpdatePasswordResp {
    common.BaseResp base = 1;
}

message UpdatePhoneReq {
    int32 user_id = 1;
    string phone = 2 [(api.form) = "phone"];
    string verify_code = 3 [(api.form) = "verify_code"];
}

message UpdatePhoneResp {
    common.BaseResp base = 1;
}

message DeactivateAccountReq {
    int32 user_id = 1;
    string password = 2 [(api.form) = "password"];
}

message DeactivateAccountResp {
    common.BaseResp base = 1;
}

message UserInfo {
    int32 user_id = 1;
    string username = 2;
    string email = 3;
    string phone = 4;
    string avatar = 5;
    string address = 6;
    int32 status = 7;
    int64 created_at = 8;
}

service UserHandler {
    rpc login(UserLoginReq) returns (UserLoginResp) {
        option (api.post) = "/user/login";
    }
    rpc register(UserRegisterReq) returns (UserRegisterResp) {
        option (api.post) = "/user/register";
    }
    rpc logout(UserLogoutReq) returns (UserLogoutResp) {
        option (api.post) = "/user/logout";
    }
    rpc getUserInfo(GetUserInfoReq) returns (GetUserInfoResp) {
        option (api.get) = "/user/info";
    }
    rpc updateUserInfo(UpdateUserInfoReq) returns (UpdateUserInfoResp) {
        option (api.put) = "/user/info";
    }
    rpc updatePassword(UpdatePasswordReq) returns (UpdatePasswordResp) {
        option (api.put) = "/user/password";
    }
    rpc updatePhone(UpdatePhoneReq) returns (UpdatePhoneResp) {
        option (api.put) = "/user/phone";
    }
    rpc deactivateAccount(DeactivateAccountReq) returns (DeactivateAccountResp) {
        option (api.post) = "/user/deactivate";
    }
}
